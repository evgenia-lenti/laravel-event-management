name: 'Event Registrations'
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: 'api/v1/events/{event_id}/register'
    metadata:
      groupName: 'Event Registrations'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Register the authenticated user for an event'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      event_id:
        name: event_id
        description: 'The ID of the event.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      event:
        name: event
        description: 'The ID of the event to register for.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      event_id: 1
      event: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Successfully registered for the event.",
            "data": {
              "registration": {
                "id": 1,
                "user": {
                  "id": 1,
                  "name": "John Doe",
                  "email": "user@example.com"
                },
                "event": {
                  "id": 1,
                  "title": "Tech Conference 2025"
                },
                "createdAt": "04/08/2025 20:16",
                "can": {
                  "delete": true
                }
              }
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "status": "error",
            "message": "This action is unauthorized."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "status": "error",
            "message": "Resource not found."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "status": "error",
            "message": "You are already registered for this event."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "An unexpected error occurred"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/events/{event_id}/unregister'
    metadata:
      groupName: 'Event Registrations'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Unregister the authenticated user from an event'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      event_id:
        name: event_id
        description: 'The ID of the event.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      event:
        name: event
        description: 'The ID of the event to unregister from.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      event_id: 1
      event: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Successfully unregistered from the event.",
            "data": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "status": "error",
            "message": "Resource not found."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "An unexpected error occurred"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/user/registrations
    metadata:
      groupName: 'Event Registrations'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all registrations for the authenticated user'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "user": {
                  "id": 1,
                  "name": "John Doe",
                  "email": "user@example.com"
                },
                "event": {
                  "id": 1,
                  "title": "Tech Conference 2025"
                },
                "createdAt": "04/08/2025 20:16",
                "can": {
                  "delete": true
                }
              }
            ],
            "links": {
              "first": "http://example.com/api/v1/user/registrations?page=1",
              "last": "http://example.com/api/v1/user/registrations?page=1",
              "prev": null,
              "next": null
            },
            "meta": {
              "current_page": 1,
              "from": 1,
              "last_page": 1,
              "path": "http://example.com/api/v1/user/registrations",
              "per_page": 15,
              "to": 1,
              "total": 1
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "An unexpected error occurred"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
